#!/bin/sh

error() {
  echo "$@" 1>&2
}
usage() {
 error "usage: $0 -s <OperatingSystem> [-p <PdDir>]"
 error "     -s <OperatingSystem>: either 'osx' or 'w32'"
 error "     -p <PdDir>: installation path of Pd-Resources"
 error "	default: fetches a local copy of Pd"
 error "     -b <BuildDir>: where to build Pd-iem"
 error "	default: $(pwd)/build"
 error "     -d <DestDir>: where to bundle Pd-iem"
 error "	default: $(pwd)/dist"
 error "     -r <library1:library2>: which libraries to build"
 error "	default: ALL"
 exit $1
}

absdir() {
  mkdir -p "$1" && cd "$1" && pwd
}

RUNDIR=$(pwd)
SCRIPTDIR=$(absdir ${0%/*}/)

BUILDDIR=
DESTDIR=
PDDIR=
OS=
if [ "x${TRAVIS_OS_NAME}" != "x" ]; then
 OS=$(${SCRIPTDIR}/closet/mangle_os.sh ${TRAVIS_OS_NAME})
fi
RECIPES=ALL

while getopts "s:p:b:d:r:" opt; do
 case $opt in
   s)
     OS=$OPTARG
     ;;
   p)
     PDDIR=$OPTARG
     ;;
   b)
     BUILDDIR=$OPTARG
     ;;
   d)
     DESTDIR=$OPTARG
     ;;
   r)
     RECIPES=$(echo ${OPTARG} | tr ':' ' ')
     ;;
   h|\?)
     usage 0
     ;;
   :)
     error "Option -${OPTARG} requires an argument"
     exit 1
     ;;
   *)
     error "fallback: $OPTARG"
     ;;
  esac
done
shift $(( ${OPTIND} - 1 ))

if [ "x${OS}" = "x" ]; then
  usage 1
fi

if [ -z "${BUILDDIR}" ]; then BUILDDIR=build; fi
BUILDDIR=$(absdir "${BUILDDIR}")
if [ -z "${PDDIR}" ]; then PDDIR=${BUILDDIR}/pd; fi
if [ -z "${DESTDIR}" ]; then DESTDIR=dist; fi
DESTDIR=$(absdir "${DESTDIR}")


