#!/usr/bin/make
# -*- mode: Makefile -*-
all: clean depends build
.PHONY: all depends build install clean recipes

RECEIPTS=iemlib comport iemmatrix iem_ambi iem_tab
RECEIPTS+=iemnet
RECEIPTS+=bsaylor list-abs mrpeach-net mrpeach-osc pduino windowing
RECEIPTS+=zexy

## per default use the list of recipes given above
## however, if the user has specified some recipes manually, use those
RECIPES=$(RECEIPTS)
## unless the manually specified recipes are empty
ifeq "x$(RECIPES)" "x"
override RECIPES=$(RECEIPTS)
endif
## or unless the manually specified recipes are 'ALL'
ifeq "x$(RECIPES)" "xALL"
override RECIPES=$(RECEIPTS)
endif

TARGETOS=osx
export MACOSX_DEPLOYMENT_TARGET=10.5
export LC_ALL=C

TARGETS=$(RECIPES:=.$(TARGETOS))

DESTDIR=/tmp/pd-iem
PDINCLUDE=/usr/include/pd
BREW?=brew
SUDO?=sudo

base_path=$(abspath $(lastword $(MAKEFILE_LIST))/../..)

recipe_path=$(base_path)/recipes
BUILDDIR=$(base_path)/build

## we want to create a zip-file in $(DESTDIR)/..,
## containing the last portion of $(DESTDIR)
# the terminal subdirectory of DESTDIR (that gets zipped)
ZIPINDIR=$(notdir $(DESTDIR))
# the path containing the terminal subdirectory (where the zip will end up)
ZIPOUTDIR=$(dir $(DESTDIR))

ZIPFILE=pd-iem_$(TRAVIS_TAG)_$(TARGETOS).zip

%.recursive:
	for i in $(TARGETS); do \
		test ! -e $(recipe_path)/$$i || \
		mkdir -p $(BUILDDIR)/$$i && \
		make -C $(BUILDDIR)/$$i -f $(recipe_path)/$$i DESTDIR=$(DESTDIR)/ BREW=$(BREW) SUDO=$(SUDO) $(@:.recursive=); \
	done
%.posthook:
	@echo "$(@:.post=) DONE"
depends.posthook:
	find $(BUILDDIR) -name "*.la" -exec rm -v \{\} \;
install.posthook:
	find $(DESTDIR) -name "*.la" -exec rm -v \{\} \;
	find $(DESTDIR) -name "*.dll.a" -delete
	find $(DESTDIR) -type f \( -name "*.dll" -or -name "*.d_fat" \) -exec chmod a-x \{\} \;
	find $(BUILDDIR)/pd -iname "*.dll" -delete
	$(base_path)/kitchen/pasty-$(TARGETOS).sh $(DESTDIR)
	cd $(ZIPOUTDIR) && zip -r $(ZIPFILE) $(ZIPINDIR) && ls -lh $(ZIPFILE)

depends build install clean: % : %.recursive %.posthook


recipes:
	@echo RECEIPTS: $(RECEIPTS)
	@echo RECIPES: $(RECIPES)
	@echo TARGETS: $(TARGETS)
